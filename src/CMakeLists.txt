cmake_minimum_required (VERSION 3.0.2)
project (align)

include(CheckCXXCompilerFlag)
CHECK_CXX_COMPILER_FLAG("-std=c++1z" COMPILER_SUPPORTS_CXX1z)
if(COMPILER_SUPPORTS_CXX1z)
	set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -std=c++1z")
else()
        message(FATAL_ERROR "The compiler ${CMAKE_CXX_COMPILER} has no C++1z support. Please use a different C++ compiler.")
endif()


add_executable(align align.c++ util.c++ Alignment.c++ Coordinate.c++ CoordinateIterator.c++ Coordinates.c++ Costs.c++ Dimensions.c++ DimensionsIterator.c++ Distance.c++ Europarl.c++)
#set_property(TARGET align PROPERTY CXX_STANDARD 11)
#set_property(TARGET align PROPERTY CXX_STANDARD_REQUIRED ON)
#set(CMAKE_CXX_STANDARD 1z)
#set(CMAKE_CXX_STANDARD_REQUIRED on)
#set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -std=c++11")
#target_compile_features(align PRIVATE cxx_auto_type)
#target_compile_features(align PRIVATE cxx_raw_string_literals)
set(CMAKE_BUILD_TYPE Debug)
